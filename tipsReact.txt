En consola(Ej. C:\Proyectos):
	npx create-react-app NOMBRE_PROYECTO
	(Quedaria: C:\Proyectos\NOMBRE_PROYECTO)
	(Esta forma no se suele utilizar por la cantidad de cosas que instala que no vamos a utilizar)

ó

Tambien se puede utilziar Vite para generar un proyecto mas liviano y rapido:
	En consola(Ej. C:\Proyectos):
		npm init -y
		npm create vite@latest
		ó
		npm create vite
		NOMBRE_PROYECTO
		cd NOMBRE_PROYECTO
		npm install
		para correr el sv:
		npm run dev
		
Los nombres de los componentes comienzan en Mayuscula, para diferenciarlos de una función.
	(
		Ej. Boton.jsx
		function Boton (){
			return(
				<button>Ejemplo de boton</button>
			)
		}
		export default Boton;
	)
Para incorporar el componente:
	En index.js por Ej.
		import Boton form './boton.jsx';	
		Dentro de <React.StrictMode>:
			<Boton/>
		Para pasarle argumentos:
			<Boton numero={2}/>
		(
			En Boton.jsx:
				function Boton (props){
					return(
						<button>{props.numero}</button>
					)
				}
		)

Para poder utilizar Bootstrap:
	en consola(Raiz del proyecto):
		npm i react-bootstrap bootstrap
		(Para componentes)
	para que funcione hay que linkar el bootstrap en el index.js:
		import 'bootstrap/dist/css/bootstrap.min.css';
		(Para Styles)

Para usar los estados en React hay que importar useState:
import { useState } from 'react';
const [count, setCount] = useState(0);
Al usar useState devuelve un array de 2 posiciones(por eso el destructuring), la primera(count)el valor del estado
la segunda la definicion del nombre de la funcion que va a cambiar el valor inicial(en este caso 0)
Para actualizar solo un componente o elemento hay que importar useEffect:
import { useState, useEffect } from 'react';
Se utiliza cuando exista un cambio en este lugar, que haga tal cosa, por ejemplo:
Cuando exista un cambio en la lista de producto (eliminar 1 por ej.) vas a ejecutar la funcion que me trae los productos actualizados
dentro del componente (1er parametro funcion a ejecutar, 2do paramentro donde detectar el cambio):
	useEffect(() => {
        console.log("cambio el contador");
    }, [count])