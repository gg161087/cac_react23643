Se configura el componente Show.jsx de proyecto CRUD-Firebase

Se configura useState:
    const [heroes, setHeroes] = useState([]);
Ser eferencia a la db de firestore con 'collection'
    const heroesCollection = collection(db, 'heroes');
Funcion para mostrar todos los documentos de la db de firestore
    const getHeroes = async () => {
        const response = await getDocs(heroesCollection)
        /*De la respuesta se mapea la response para crear un array por cada id*/
        setHeroes(
            response.docs.map((doc) => ({ ...doc.data(), id: doc.id }))
        )
    }
Funcion para eliminar un documento de firestore importando deleteDoc de 'firebase/firestore'
    const deleteHeroe = async (id) => {
        const heroeDoc = doc(db, 'heroes', id);
        await deleteDoc(heroeDoc);
        getHeroes();
    }
Funcion para sweetalert2 (confirmacion/elimacion de documento) copy and paste de la pagina oficial:
    const confirmDelete = (id) => {
        Swal.fire({
            title: 'Estas Seguro/a?',
            text: "No podes revertir esta Accion!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Si, Deseo Borrarlo!'
        }).then((result) => {
            if (result.isConfirmed) {
                deleteHeroe(id) // llamamos a la funcion eliminar
                Swal.fire(
                    'Borrado!',
                    'Tu Heroe ha sido Borrado/a.',
                    'success'
                )
            }
        })
    }
useEffect (cuando estes en el componente, ejecuta)
    useEffect(()=>{
        getHeroes()
    },[])
el return del fragmento 